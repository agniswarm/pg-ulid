name: Build and Test ULID Extension
on: [push, pull_request]

jobs:
  linux:
    name: Linux Builds
    strategy:
      fail-fast: false
      matrix:
        include:
          - pg: 17
            os: ubuntu-24.04
          - pg: 16
            os: ubuntu-24.04-arm
          - pg: 15
            os: ubuntu-22.04
          - pg: 14
            os: ubuntu-22.04-arm
          - pg: 13
            os: ubuntu-22.04
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL
        uses: agniswarm/pg-ext-actions/pg-setup@master
        with:
          version: ${{ matrix.pg }}
          install-contrib: 'true'
          operating-system: ${{ matrix.os }}
      
      - name: Build and test extension
        uses: agniswarm/pg-ext-actions/build-check@master
        with:
          working-directory: ./
          operating-system: ${{ matrix.os }}

  macos:
    name: macOS Builds
    strategy:
      fail-fast: false
      matrix:
        include:
          - pg: 17
            os: macos-15
          - pg: 14
            os: macos-13
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL
        uses: agniswarm/pg-ext-actions/pg-setup@master
        with:
          version: ${{ matrix.pg }}
          install-contrib: 'true'
          operating-system: ${{ matrix.os }}
      - name: Debug OS Detection
        run: |
          echo "Detected OS: $(case "macos-15" in ubuntu-*|debian-*|centos-*|rhel-*|fedora-*|suse-*|alpine-*) echo "linux" ;; macos-*|darwin-*) echo "macos" ;; windows-*|win-*) echo "windows" ;; linux|macos|windows) echo "macos-15" ;; *) echo "unknown" ;; esac)"
          echo "Checking pg_config paths..."
          ls -la /opt/homebrew/bin/pg_config 2>/dev/null || echo "/opt/homebrew/bin/pg_config not found"
          ls -la /usr/local/bin/pg_config 2>/dev/null || echo "/usr/local/bin/pg_config not found"
        shell: bash
      
      - name: Build and test extension
        uses: agniswarm/pg-ext-actions/build-check@master
        with:
          working-directory: ./
          operating-system: ${{ matrix.os }}

  windows:
    name: Windows Builds
    strategy:
      fail-fast: false
      matrix:
        include:
          - pg: 17
            os: windows-2025
          - pg: 14
            os: windows-2022
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Cache PostgreSQL installation
        id: cache-postgres
        uses: actions/cache@v4
        with:
          path: |
            C:\Program Files\PostgreSQL\${{ matrix.pg }}
            C:\Users\runneradmin\AppData\Local\Temp\postgresql-setup
          key: postgresql-${{ matrix.pg }}-${{ matrix.os }}-${{ hashFiles('**/Makefile.win') }}
          restore-keys: |
            postgresql-${{ matrix.pg }}-${{ matrix.os }}-
            postgresql-${{ matrix.pg }}-
      
      - name: Setup PostgreSQL
        if: steps.cache-postgres.outputs.cache-hit != 'true'
        uses: agniswarm/pg-ext-actions/pg-setup@master
        with:
          version: ${{ matrix.pg }}
          install-contrib: 'true'
          operating-system: ${{ matrix.os }}
      
      - name: Verify PostgreSQL installation
        run: |
          echo "Verifying PostgreSQL installation..."
          pg_config --version || echo "pg_config not found"
          echo "PostgreSQL installation verified"
        shell: cmd
      
      - name: Build and test extension
        uses: agniswarm/pg-ext-actions/build-check@master
        with:
          working-directory: ./
          operating-system: ${{ matrix.os }}
