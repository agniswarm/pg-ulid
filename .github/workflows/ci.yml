name: Build and Test ULID Extension
on: [push, pull_request]

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - postgres: 19
            os: ubuntu-24.04
          - postgres: 18
            os: ubuntu-24.04
          - postgres: 17
            os: ubuntu-24.04
          - postgres: 16
            os: ubuntu-24.04
          - postgres: 15
            os: ubuntu-22.04
          - postgres: 14
            os: ubuntu-22.04
          - postgres: 13
            os: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL
        uses: PostgreSQL/postgresql-dev-action@v1
        with:
          postgres-version: ${{ matrix.postgres }}
          extensions: true
      
      - name: Build extension
        run: |
          make clean || true
          make PG_CONFIG=$(which pg_config)
        env:
          PG_CFLAGS: -Wall -Wextra -Werror -Wno-unused-parameter -Wno-sign-compare
      
      - name: Install extension
        run: |
          sudo make PG_CONFIG=$(which pg_config) install
      
      - name: Run tests
        run: |
          make PG_CONFIG=$(which pg_config) installcheck
      
      - name: Show test failures
        if: failure()
        run: |
          cat regression.diffs || echo "No regression.diffs found"

  macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - postgres: 17
            os: macos-15
          - postgres: 16
            os: macos-14
          - postgres: 14
            os: macos-13
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install PostgreSQL
        run: |
          brew update
          brew install postgresql@${{ matrix.postgres }}
          echo "$(brew --prefix postgresql@${{ matrix.postgres }})/bin" >> $GITHUB_PATH
      
      - name: Build extension
        run: |
          make clean || true
          make PG_CONFIG=$(brew --prefix postgresql@${{ matrix.postgres }})/bin/pg_config
        env:
          PG_CFLAGS: -Wall -Wextra -Werror -Wno-unused-parameter -Wno-unknown-warning-option
      
      - name: Install extension
        run: |
          sudo make PG_CONFIG=$(brew --prefix postgresql@${{ matrix.postgres }})/bin/pg_config install
      
      - name: Run tests
        run: |
          make PG_CONFIG=$(brew --prefix postgresql@${{ matrix.postgres }})/bin/pg_config installcheck
      
      - name: Show test failures
        if: failure()
        run: |
          cat regression.diffs || echo "No regression.diffs found"

  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - postgres: 17
            os: windows-2022
          - postgres: 16
            os: windows-2022
          - postgres: 14
            os: windows-2022
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v1
        with:
          version: ${{ matrix.postgres }}
          port: 5432
      
      - name: Find PostgreSQL installation
        shell: pwsh
        run: |
          $pgPath = Get-Command pg_config | Select-Object -ExpandProperty Source
          $pgDir = Split-Path (Split-Path $pgPath)
          echo "PGROOT=$pgDir" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "Found PostgreSQL at: $pgDir"
      
      - name: Build with nmake
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          nmake /F Makefile.win PGROOT=%PGROOT%
      
      - name: Install extension
        shell: cmd
        run: |
          nmake /F Makefile.win PGROOT=%PGROOT% install
      
      - name: Run tests
        shell: cmd
        run: |
          nmake /F Makefile.win PGROOT=%PGROOT% installcheck
      
      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: windows-test-results-${{ matrix.postgres }}
          path: |
            regression.diffs
            regression.out

  i386:
    runs-on: ubuntu-latest
    container:
      image: i386/debian:bookworm
      options: --platform linux/386
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y build-essential postgresql-16 postgresql-server-dev-16 sudo
      
      - name: Start PostgreSQL
        run: |
          service postgresql start
      
      - name: Build extension
        run: |
          make PG_CONFIG=/usr/bin/pg_config
        env:
          PG_CFLAGS: -Wall -Wextra -Werror -Wno-unused-parameter -Wno-sign-compare
      
      - name: Install extension
        run: |
          sudo make PG_CONFIG=/usr/bin/pg_config install
      
      - name: Run tests as postgres user
        run: |
          sudo -u postgres make PG_CONFIG=/usr/bin/pg_config installcheck
      
      - name: Show test failures
        if: failure()
        run: |
          cat regression.diffs || echo "No regression.diffs found"
