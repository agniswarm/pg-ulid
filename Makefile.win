# Makefile.win for ulid extension (C implementation, nmake-friendly)
EXTENSION = ulid
VERSION = 0.1.1
DATA = sql/$(EXTENSION)--$(VERSION).sql

# C extension
MODULE_big = ulid
OBJS = src/ulid.obj

# PostgreSQL configuration
PG_CONFIG ?= pg_config

# Default target
all: $(MODULE_big).dll

# Build the C extension
$(MODULE_big).dll: $(OBJS)
	@echo Building C extension...
	@$(CC) /shared /export:PG_init /export:PG_fini $(OBJS) /Fe$(MODULE_big).dll

src/ulid.obj: src/ulid.c
	@echo Compiling C source...
	@$(CC) /c /I"$(PG_INCLUDEDIR)" /I"$(PG_INCLUDEDIR_SERVER)" src/ulid.c /Fo$@

# Install the extension
install: all
	@echo Installing extension...
	@if not exist "$(PG_PKGLIBDIR)" mkdir "$(PG_PKGLIBDIR)"
	@copy $(MODULE_big).dll "$(PG_PKGLIBDIR)\"
	@if not exist "$(PG_SHAREDIR)\extension" mkdir "$(PG_SHAREDIR)\extension"
	@copy $(DATA) "$(PG_SHAREDIR)\extension\"
	@copy ulid.control "$(PG_SHAREDIR)\extension\"

# Windows installcheck: call Windows CI script if present
installcheck:
	@echo Running PostgreSQL extension tests (Windows)...
	@if exist test\build\ci.bat ( test\build\ci.bat && (echo Extension tests passed!) || (echo Extension tests failed! & exit /b 1) ) else ( echo test\build\ci.bat not found; exit /b 1 )

# Clean
clean:
	@if exist src\*.obj del /Q src\*.obj
	@if exist $(MODULE_big).dll del /Q $(MODULE_big).dll
	@if exist $(MODULE_big).exp del /Q $(MODULE_big).exp
	@if exist $(MODULE_big).lib del /Q $(MODULE_big).lib

# Help
help:
	@echo Available targets:
	@echo   all              - Build the extension (default)
	@echo   install          - Install the extension into Postgres
	@echo   installcheck     - Run Windows regression tests (requires test\build\ci.bat)
	@echo   clean            - Clean build artifacts

.PHONY: all install installcheck clean help
