#
# Makefile.win - nmake compatible build for PostgreSQL ULID extension
#
# Requirements:
#   - Environment variable PGXS must be set to full path of pgxs.mk BEFORE running nmake.
#     Example PGXS: C:\Program Files\PostgreSQL\15\lib\postgresql\pgxs\src\makefiles\pgxs.mk
#
EXTENSION = ulid
EXTVERSION = 0.1.1

MODULE_big = $(EXTENSION)
OBJS = src\ulid.obj
DATA = $(EXTENSION).control sql\$(EXTENSION)--$(EXTVERSION).sql
REGRESS =

# nmake cannot execute shell during parse-time. PGXS must be supplied externally.
PG_CONFIG = pg_config

!IF "$(PGXS)" == ""
!ERROR "PGXS not set. Please set environment variable PGXS to the full path of pgxs.mk (e.g. C:\Program Files\PostgreSQL\15\lib\postgresql\pgxs\src\makefiles\pgxs.mk)."
!ENDIF

!INCLUDE $(PGXS)

# Optional ULID_C_DIR (set externally if needed)
ULID_C_DIR =
!IF "$(ULID_C_DIR)" != ""
  ULID_C_INCDIR = -I"$(ULID_C_DIR)\include"
  ULID_C_LIBDIR = -L"$(ULID_C_DIR)\lib"
  ULID_C_LIBS   = -lulid
!ELSE
  ULID_C_INCDIR =
  ULID_C_LIBDIR =
  ULID_C_LIBS =
!ENDIF

# Compiler flags (adjust as needed)
PG_CFLAGS = -O2 -std=gnu11

# Default compiler: use cl if not overridden
!IFNDEF CC
CC = cl
!ENDIF

# Compile src\ulid.c -> src\ulid.obj
src\ulid.obj: src\ulid.c
	@echo Compiling src\ulid.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(PG_CFLAGS) $(ULID_C_INCDIR) -c src\ulid.c -Fo src\ulid.obj

# All target: let PGXS-provided rules handle linking/install if present
all: $(OBJS)
	@echo Build objects complete. If PGXS provides submake, it will handle linking/installation.

# installcheck: run the Windows batch test script
installcheck: all
	@echo Running Windows CI batch test script...
	cmd.exe /C "cd /d %CD% && test\build\ci.bat"

clean:
	-@echo Cleaning artifacts...
	-@if exist src\ulid.obj del /q src\ulid.obj 2>nul
	-@if exist $(EXTENSION).dll del /q $(EXTENSION).dll 2>nul
	-@if exist results rmdir /s /q results 2>nul
	-@if exist tmp_check rmdir /s /q tmp_check 2>nul
	-@if exist regression.diffs del /q regression.diffs 2>nul
	-@if exist regression.out del /q regression.out 2>nul

# Phony targets
!IFNDEF ALL_TARGETS
ALL_TARGETS = all install installcheck uninstall clean
!ENDIF

.PHONY: all install installcheck uninstall clean
