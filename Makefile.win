# Makefile.win for ulid extension (Go implementation)
EXTENSION = ulid
VERSION = 1.0.0
DATA = sql/$(EXTENSION)--$(VERSION).sql

# PostgreSQL extension build system
PG_CONFIG ?= pg_config
PGXS := $(shell $(PG_CONFIG) --pgxs)
include $(PGXS)

# Override the default build target
all: ulid_generator.exe

# Build the Go binary
ulid_generator.exe: src/ulid.go
	@echo Building Go binary...
	cd src && go mod download
	cd src && go build -o ../ulid_generator.exe .

# Custom install target for the Go binary (respects DESTDIR & bindir)
install-binary: ulid_generator.exe
	@echo Installing ulid_generator.exe to $(DESTDIR)$(bindir)
	# Create bindir if needed, then copy exe
	powershell -Command "New-Item -ItemType Directory -Force -Path '$(DESTDIR)$(bindir)' > \$null; Copy-Item -Force ulid_generator.exe -Destination '$(DESTDIR)$(bindir)\ulid_generator.exe'"

# Install SQL into datadir/extension (do not change source sql)
install: install-binary
	@echo Installing SQL to $(DESTDIR)$(datadir)\extension
	powershell -Command "New-Item -ItemType Directory -Force -Path '$(DESTDIR)$(datadir)\extension' > \$null; (Get-Content '$(DATA)') -replace '@BINDIR@','$(bindir)' | Set-Content -Encoding UTF8 '$(DESTDIR)$(datadir)\extension\$(EXTENSION)--$(VERSION).sql'"
	# invoke PGXS install step to install control file, etc.
	$(MAKE) -s -f $(top_srcdir)/Makefile install

# Run tests (Go)
test:
	cd test && go test -v ./...

# PostgreSQL regression tests (Windows)
installcheck:
	@echo Running PostgreSQL extension tests...
	@if exist test\build\ci.bat ( \
		test\build\ci.bat ; \
		if errorlevel 1 ( \
			echo Extension tests failed or PostgreSQL not available. && exit /b 1 \
		) else ( \
			echo Extension tests passed! \
		) \
	) else ( \
		echo test\build\ci.bat not found; exit /b 1 \
	)

# Clean build artifacts
clean:
	if exist ulid_generator.exe del /Q ulid_generator.exe
	cd src && go clean
	cd test && go clean -testcache

# Help target
help:
	@echo Available targets:
	@echo   all      - Build the extension (default)
	@echo   install  - Install the extension
	@echo   test     - Run tests
	@echo   installcheck - Run regression tests (requires PostgreSQL)
	@echo   clean    - Clean build artifacts
	@echo   help     - Show this help message

.PHONY: all install install-binary test installcheck clean help
